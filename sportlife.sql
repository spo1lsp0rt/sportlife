-- phpMyAdmin SQL Dump
-- version 5.1.3
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3306
-- Время создания: Окт 06 2022 г., 20:08
-- Версия сервера: 8.0.29
-- Версия PHP: 7.4.29

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `sportlife`
--

DELIMITER $$
--
-- Процедуры
--
CREATE DEFINER=`root`@`%` PROCEDURE `getAllStatFromOfp` (IN `gender` TEXT, IN `studentFrom` TEXT, IN `yearTest` TEXT)   BEGIN
IF(studentFrom = "Все факультеты") THEN
        SELECT ofp.id_normative, COUNT(ofp.result) as `count`, AVG(ofp.result) as `avg`
        FROM ofp, user
        WHERE ofp.id_user = user.ID_User 
        AND user.gender = gender
        AND YEAR(ofp.Date) = yearTest
        GROUP BY ofp.id_normative
        ORDER BY ofp.id_normative;
ELSEIF(EXISTS(SELECT * FROM faculty WHERE Name = studentFrom)) THEN
        SELECT ofp.id_normative, COUNT(ofp.result) as `count`, AVG(ofp.result) as `avg`
        FROM ofp, user, class, faculty
        WHERE ofp.id_user = user.ID_User 
        AND user.gender = gender 
        AND ofp.actual_class_id = class.ID_Class 
        AND class.id_faculty = faculty.id_faculty
        AND faculty.Name = studentFrom
        AND YEAR(ofp.Date) = yearTest
        GROUP BY ofp.id_normative
        ORDER BY ofp.id_normative;
ELSE 
        SELECT ofp.id_normative, COUNT(ofp.result) as `count`, AVG(ofp.result) as `avg`
        FROM ofp, user, class
        WHERE ofp.id_user = user.ID_User 
        AND user.gender = gender 
        AND ofp.actual_class_id = class.ID_Class 
        AND class.Name = studentFrom
        AND YEAR(ofp.Date) = yearTest
        GROUP BY ofp.id_normative
        ORDER BY ofp.id_normative;
END IF;
END$$

CREATE DEFINER=`root`@`127.0.0.1` PROCEDURE `getAllStatFromTest` (IN `gender` TEXT, IN `studentFrom` TEXT, IN `numTest` INT, IN `yearTest` TEXT)   BEGIN
IF(studentFrom = "Все факультеты") THEN
        SELECT re.Name, COUNT(re.Value)as `count`, AVG(re.Value) as `avg`, AVG(re.Norma) as `Norma` 
        FROM `result_exercises` AS re, statistic AS s, user AS u, results AS r 
        WHERE re.ID_Result = s.ID_Result and s.ID_Test = numTest and s.ID_User = u.ID_User and u.gender = gender 		 AND YEAR(r.Date) = yearTest GROUP BY re.Name;
ELSEIF(EXISTS(SELECT * FROM faculty WHERE Name = studentFrom)) THEN
        SELECT re.Name, COUNT(re.Value)as `count`, AVG(re.Value) as `avg`, AVG(re.Norma) as `Norma` 
        FROM `result_exercises` AS re, statistic AS s, user AS u, class AS c, results as r 
        WHERE re.ID_Result = s.ID_Result and s.ID_Test = numTest and s.ID_User = u.ID_User and u.gender = gender AND s.actual_id_class = c.ID_Class AND c.id_faculty = (SELECT id_faculty FROM faculty WHERE Name = studentFrom) AND YEAR(r.Date) = yearTest GROUP BY re.Name;
ELSE 
        SELECT re.Name, COUNT(re.Value)as `count`, AVG(re.Value) as `avg`, AVG(re.Norma) as `Norma` 
        FROM `result_exercises` AS re, statistic AS s, user AS u, class AS c, results AS r 
        WHERE re.ID_Result = s.ID_Result and s.ID_Test = numTest and s.ID_User = u.ID_User and u.gender = gender AND s.actual_id_class = c.ID_Class AND c.Name = studentFrom AND YEAR(r.Date) = yearTest GROUP BY re.Name;
END IF;
END$$

CREATE DEFINER=`root`@`127.0.0.1` PROCEDURE `getNormativesForTest1` (IN `gender` TEXT)   BEGIN

IF(gender = "") THEN
	SELECT ID_Exercise, 
    MIN(normatives1.Value) AS min, 
    MAX(normatives1.Value) AS max 
	FROM normatives1
    GROUP BY normatives1.ID_Exercise;
ELSE 
	SELECT ID_Exercise, 
    MIN(normatives1.Value) AS min, 
    MAX(normatives1.Value) AS max 
	FROM normatives1 WHERE normatives1.gender = gender
    GROUP BY normatives1.ID_Exercise;
END IF;

END$$

CREATE DEFINER=`root`@`127.0.0.1` PROCEDURE `getNormativesForTest2` (IN `gender` TEXT)   BEGIN

IF(gender = "") THEN
	SELECT ID_Exercise, 
    MIN(normatives2.Value) AS min, 
    MAX(normatives2.Value) AS max 
	FROM normatives2
    GROUP BY normatives2.ID_Exercise;
ELSE 
	SELECT ID_Exercise, 
    MIN(normatives2.Value) AS min, 
    MAX(normatives2.Value) AS max 
	FROM normatives2 WHERE normatives2.gender = gender
    GROUP BY normatives2.ID_Exercise;
END IF;

END$$

CREATE DEFINER=`root`@`127.0.0.1` PROCEDURE `getNormativesForTest3` (IN `gender` TEXT)   BEGIN

IF(gender = "") THEN
	SELECT ID_Exercise, 
    MIN(normatives3.Value) AS min, 
    MAX(normatives3.Value) AS max 
	FROM normatives3
    GROUP BY normatives3.ID_Exercise;
ELSE 
	SELECT ID_Exercise, 
    MIN(normatives3.Value) AS min, 
    MAX(normatives3.Value) AS max 
	FROM normatives3 WHERE normatives3.gender = gender
    GROUP BY normatives3.ID_Exercise;
END IF;

END$$

CREATE DEFINER=`root`@`%` PROCEDURE `getNormativesForTest4` (IN `gender` TEXT)   BEGIN

IF(gender = "") THEN
	SELECT ID_Exercise, 
    MIN(normatives4.Value) AS min, 
    MAX(normatives4.Value) AS max 
	FROM normatives4
    GROUP BY normatives4.ID_Exercise;
ELSE 
	SELECT ID_Exercise, 
    MIN(normatives4.Value) AS min, 
    MAX(normatives4.Value) AS max 
	FROM normatives4 WHERE normatives4.gender = gender
    GROUP BY normatives4.ID_Exercise;
END IF;

END$$

CREATE DEFINER=`root`@`%` PROCEDURE `getStatistic` (IN `idClass` INT)   SELECT * FROM `statistic` WHERE `ID_User` IN (select ID_User FROM user WHERE id_class = idClass)$$

DELIMITER ;

-- --------------------------------------------------------

--
-- Структура таблицы `class`
--

CREATE TABLE `class` (
  `ID_Class` int NOT NULL,
  `Name` varchar(20) NOT NULL,
  `id_faculty` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `class`
--

INSERT INTO `class` (`ID_Class`, `Name`, `id_faculty`) VALUES
(1, 'ЗНХТБ-42', 1),
(2, 'ЗНННБ-42', 1),
(3, 'ЗТЭЭБ-52', 3),
(4, 'ЗТЭАС-42', 3),
(5, 'ДБЭЭБ-11', 2),
(6, 'ДФЭКС-22', 4),
(7, 'ДНГГС-11', 1),
(8, 'ДИИБМ-11', 6),
(9, 'ДБПКБ-41', 2),
(10, 'ДМНПБ-41', 3),
(11, 'ДКХО-11', 5),
(12, 'ЗРВАМ-11', 2),
(13, 'ЗМТОБ-41', 3),
(14, 'ДКНО-11', 5),
(15, 'ДКБО-21', 5),
(16, 'ДФЭЭБ-21', 4),
(17, 'ЗКНО-41', 5),
(18, 'ДКЕО-31', 5),
(19, 'ЗИНРМ-21', 6),
(20, 'ДКЮО-22', 5),
(21, 'ОЗНННБ-22', 1),
(22, 'ДКПС-31', 5),
(23, 'ЗББББ-51', 2),
(24, 'ДКХО-42', 5),
(25, 'ДКМО-12', 5),
(26, 'ДКРС-31', 5),
(27, 'ДКДО-12', 5),
(28, 'ДКВС-11', 5),
(29, 'ДКРО-21', 5),
(30, 'ЗМЭАБ-42', 3),
(31, 'ЗКЭС-21', 5),
(32, 'ДТУОБ-11', 3),
(33, 'ДТЕТБ-31', 3),
(34, 'ДТЭЭМ-11', 3),
(35, 'ДРПТМ-11', 2),
(36, 'ДРТТМ-11', 2),
(37, 'ДБЭЭБ-41', 2),
(38, 'ДТЭЭМ-21', 3),
(39, 'ОЗНТММ-11', 1),
(40, 'ЗТУОБ-41', 3),
(41, 'ЗБФТБ-31', 2),
(42, 'ЗФЭФБ-31', 4),
(43, 'ЗРВАБ-51', 2),
(44, 'ОЗНХТМ-11', 1),
(45, 'ЗФЭББ-51', 4),
(46, 'ЗТЭЭБ-51', 3),
(47, 'ДКАО-31', 5),
(48, 'ЗКАО-51', 5),
(49, 'ЗТЭЭМ-32', 3),
(50, 'ДНННБ-22', 1),
(51, 'ЗНННБ-45', 1),
(52, 'ДРВАБ-42', 2),
(53, 'ОЗФЭЭБ-21', 4),
(54, 'ДИИББ-11', 6),
(55, 'ДКЗО-11', 5),
(56, 'ОЗНУММ-12', 1),
(57, 'ЗТЭЭБ-32', 3),
(58, 'ДЮЮОБ-11', 4),
(59, 'ДРРРБ-31', 2),
(60, 'ДСАРБ-11', 7),
(61, 'ДИББМ-11', 6),
(62, 'ДРВАМ-21', 2),
(63, 'ДТЭЭБ-41', 3),
(64, 'ДФЭУМ-11', 4),
(65, 'ДФЭЭМ-21', 4),
(66, 'ЗТУОМ-21', 3),
(67, 'ЗФЭФБ-41', 4),
(68, 'ЗБЭЭБ-51', 2),
(69, 'ЗФЭКС-21', 4),
(70, 'ЗНТМБ-31', 1),
(71, 'ЗФЭББ-41', 4),
(72, 'ЗСССМ-21', 7),
(73, 'ЗБЭЭМ-11', 2),
(74, 'ЗИССМ-21', 6),
(75, 'ДКПС-11', 5),
(76, 'ДКНО-31', 5),
(77, 'ВИББМ-31', 6),
(78, 'ЗКАС-41', 5),
(79, 'ОЗФЭББ-31', 4),
(80, '#NULL!', NULL),
(81, 'ЗКЭС-11', 5),
(82, 'ЗТЭЭБ-12', 3),
(83, 'ЗТЭАС-12', 3),
(84, 'ЗТЭАС-22', 3),
(85, 'ЗТЭАС-52', 3),
(86, 'ЗИПРБ-21', 6),
(87, 'ДИИЭБ-11', 6),
(88, 'ДБТТБ-31', 2),
(89, 'ДТЭСС-31', 3),
(90, 'ДНГГС-51', 1),
(91, 'ДИСМБ-41', 6),
(92, 'ДИААМ-21', 6),
(93, 'ЗТЭСС-51', 3),
(94, 'ЗТЭСС-41', 3),
(95, 'ДКПО-11', 5),
(96, 'ЗИААБ-11', 6),
(97, 'ЗИИЭБ-11', 6),
(98, 'ЗФМПБ-41', 4),
(99, 'ЗФЭКС-31', 4),
(100, 'ЗФЭПБ-51', 4),
(101, 'ЗТЭЭБ-31', 3),
(102, 'ДКЕО-41', 5),
(103, 'ЗКЮО-41', 5),
(104, 'ДКНО-21', 5),
(105, 'ЗКЮО-21', 5),
(106, 'ДКЮО-31', 5),
(107, 'ДКПО-41', 5),
(108, 'ЗТЭЭМ-22', 3),
(109, 'ОЗНННБ-12', 1),
(110, 'ДКНО-43', 5),
(111, 'ДКИО-21', 5),
(112, 'ДКГО-11', 5),
(113, 'ЗМЭАБ-22', 3),
(114, 'ЗМХСБ-42', 3),
(115, 'ЗИПРБ-31', 6),
(116, 'ЗНТММ-21', 1),
(117, 'ДТЭАС-11', 3),
(118, 'ДРТТБ-31', 2),
(119, 'ДРВАБ-21', 2),
(120, 'ДБВСБ-31', 2),
(121, 'ДФМПБ-21', 4),
(122, 'ДФЭКС-21', 4),
(123, 'ДМХСБ-41', 3),
(124, 'ДНРМБ-31', 1),
(125, 'ЗРВАБ-11', 2),
(126, 'ДББМБ-11', 2),
(127, 'ДБТТБ-41', 2),
(128, 'ЗЮЮОб-11', 4),
(129, 'ЗФЭПБ-41', 4),
(130, 'ЗФЭПБ-31', 4),
(131, 'ЗБТТБ-51', 2),
(132, 'ЗМТОБ-51', 3),
(133, 'ОЗНРММ-31', 1),
(134, 'ЗКЭО-21', 5),
(135, 'ЗМХСМ-32', 3),
(136, 'ДКИО-11', 5),
(137, 'ДКГС-11', 5),
(138, 'ВББББ-21', 2),
(139, 'ВМХСБ-21', 3),
(140, 'ДННГБ-11', 1),
(141, '#NULL!', NULL),
(142, 'ДКСС-31', 5),
(143, 'ЗНХТБ-51', 1),
(144, 'ЗКЮО-11', 5),
(145, 'ЗНХТБ-52', 1),
(146, 'ЗНННБ-22', 1),
(147, 'ЗМЭАБ-12', 3),
(148, 'ЗИААБ-51', 6),
(149, 'ЗИИЭБ-51', 6),
(150, 'ЗИНРБ-51', 6),
(151, 'ЗМЭАБ-41', 3),
(152, 'ДИПРБ-11', 6),
(153, 'ДИИЭБ-21', 6),
(154, 'ДТЕТБ-11', 3),
(155, 'ДЮЮОБ-21', 4),
(156, 'ДФТМБ-11', 4),
(157, 'ДФТМБ-31', 4),
(158, 'ДТЭАС-41', 3),
(159, 'ДНТММ-11', 1),
(160, 'ДИИБМ-21', 6),
(161, 'ЗТККБ-41', 3),
(162, 'ЗТЕТБ-51', 3),
(163, 'ДББММ-11', 2),
(164, 'ДБПОМ-11', 2),
(165, 'ЗИПРБ-11', 6),
(166, 'ЗБТТМ-11', 2),
(167, 'ЗФЭЭМ-11', 4),
(168, 'ОЗНХТМ-21', 1),
(169, 'ЗМТОБ-31', 3),
(170, 'ЗТЕТМ-21', 3),
(171, 'ОЗНРММ-21', 1),
(172, 'ЗИССБ-51', 6),
(173, 'ДКНО-42', 5),
(174, 'ЗНХТБ-12', 1),
(175, 'ОЗНННБ-13', 1),
(176, 'ЗИААМ-21', 6),
(177, 'ДКСО-32', 5),
(178, 'ЗИААМ-31', 6),
(179, 'ДФГУМ-11', 4),
(180, 'ДКЕО-42', 5),
(181, 'ЗНННБ-55', 1),
(182, 'ДКТО-31', 5),
(183, 'ДИИЭБ-42', 6),
(184, 'ДКНО-41', 5),
(185, 'ЗИААБ-31', 6),
(186, 'ЗИПРБ-41', 6),
(187, 'ЗИИЭБ-41', 6),
(188, 'ЗМЭАБ-51', 3),
(189, 'ЗРВАМ-31', 2),
(190, 'ДИБСС-21', 6),
(191, 'ДИБББ-31', 6),
(192, 'ДИНРМ-11', 6),
(193, 'ДНГГС-21', 1),
(194, 'ДНРМБ-22', 1),
(195, 'ДИБСС-51', 6),
(196, 'ДИААБ-41', 6),
(197, 'ДТЕТМ-21', 3),
(198, 'ДРТТБ-41', 2),
(199, 'ДСССМ-11', 7),
(200, 'ДФЭББ-41', 4),
(201, 'ЗТЭЭБ-11', 3),
(202, 'ЗТУОБ-51', 3),
(203, 'ЗИААБ-21', 6),
(204, 'ЗИССБ-41', 6),
(205, 'ДКПО-31', 5),
(206, 'ЗМТОБ-32', 3),
(207, 'ЗМНПМ-22', 3),
(208, 'ЗФЭКС-61', 4),
(209, 'ДКВО-11', 5),
(210, 'ВРЭТБ-21', 2),
(211, 'ДКМО-22', 5),
(212, 'ДКИО-31', 5),
(213, 'ДИИББ-21', 6),
(214, 'ЗТРРМ-11', 3),
(215, 'ДКДО-11', 5),
(216, 'ЗНХТБ-32', 1),
(217, 'ЗТЭЭБ-42', 3),
(218, 'ЗТЭЭБ-21', 3),
(219, 'ДИБСС-11', 6),
(220, 'ДБПКБ-11', 2),
(221, 'ДБВСБ-21', 2),
(222, 'ДБФТБ-11', 2),
(223, 'ДФТМБ-41', 4),
(224, 'ДТЭЭБ-21', 3),
(225, 'ДТУОБ-31', 3),
(226, 'ДНХТБ-31', 1),
(227, 'ДИААМ-11', 6),
(228, 'ДИНРБ-31', 6),
(229, 'ДИНРМ-21', 6),
(230, 'ДИССМ-21', 6),
(231, 'ДЮЮОБ-12', 4),
(232, 'ДРРУМ-21', 2),
(233, 'ДРПТМ-21', 2),
(234, 'ДББМБ-31', 2),
(235, 'ЗТУОБ-11', 3),
(236, 'ДФЭФМ-21', 4),
(237, 'ДННММ-11', 1),
(238, 'ЗФМПБ-51', 4),
(239, 'ЗРЭТБ-51', 2),
(240, 'ДКНО-12', 5),
(241, 'ОЗНРММ-11', 1),
(242, 'ЗИССМ-31', 6),
(243, 'ДФЭКС-51', 4),
(244, 'ДКНО-13', 5),
(245, 'ЗМНПМ-12', 3),
(246, 'ЗРВАМ-21', 2),
(247, 'ОЗНННБ-32', 1),
(248, 'ДФМОБ-31', 4),
(249, 'ДККО-11', 5),
(250, 'ЗБВСБ-31', 2),
(251, 'ОЗНННБ-42', 1),
(252, 'ДБФТМ-11', 2),
(253, 'ДКЮС-12', 5),
(254, 'ЗКЭО-41', 5),
(255, 'ДКХС-11', 5),
(256, 'ЗИССБ-11', 6),
(257, 'ЗМТОБ-52', 3),
(258, 'ЗНРМБ-42', 1),
(259, 'ЗНГГС-12', 1),
(260, 'ЗФЭЭМ-21', 4),
(261, 'ЗКНС-31', 5),
(262, 'ДИПРБ-21', 6),
(263, 'ДИПРБ-31', 6),
(264, 'ДРРРБ-11', 3),
(265, 'ДФМПБ-31', 4),
(266, 'ДФЭКС-32', 4),
(267, 'ДТЭАС-21', 3),
(268, 'ДНТМБ-41', 1),
(269, 'ДТЭАС-51', 3),
(270, 'ДМЭАБ-41', 3),
(271, 'ДСССМ-21', 7),
(272, 'ДФМГМ-11', 4),
(273, 'ЗФМУБ-41', 4),
(274, 'ЗССПБ-51', 7),
(275, 'ВИБББ-21', 6),
(276, 'ДФЭКС-41', 4),
(277, 'ДКХО-21', 5),
(278, 'ВИББМ-21', 6),
(279, 'ЗИНРМ-31', 6),
(280, 'ДСАРБ-12', 7),
(281, 'ОЗННКМ-22', 1),
(282, 'ДКМО-11', 5),
(283, 'ВРЭТБ-11', 2),
(284, 'ЗФЭКС-22', 4),
(285, 'ЗФЭФМ-21', 4),
(286, 'ДКТС-21', 5),
(287, 'ЗНТММ-22', 1),
(288, 'ЗКАО-31', 5),
(289, 'ДКАО-41', 5),
(290, 'ЗТКСБ-51', 3),
(291, 'ЗНРМБ-12', 1),
(292, 'ЗТЭАС-62', 3),
(293, 'ЗИААБ-41', 6),
(294, 'ДНННБ-32', 1),
(295, 'ЗКСС-41', 5),
(296, 'ДНРМБ-11', 1),
(297, 'ДТККБ-31', 3),
(298, 'ДМНПМ-11', 3),
(299, 'ДНХТМ-21', 1),
(300, 'ДНХТБ-21', 1),
(301, 'ДНРММ-21', 1),
(302, 'ДСАРБ-31', 7),
(303, 'ЗТЕТБ-41', 3),
(304, 'ЗНХТБ-11', 1),
(305, 'ЗФЭФБ-51', 4),
(306, 'ДФЭЭМ-11', 4),
(307, 'ЗССПБ-31', 7),
(308, 'ЗФМПБ-31', 4),
(309, 'ЗНХТБ-21', 1),
(310, 'ЗРРРБ-31', 2),
(311, 'ЗКНС-11', 5),
(312, 'ДКЭО-11', 5),
(313, 'ДКРО-11', 5),
(314, 'ДКНС-11', 5),
(315, 'ДКЭС-11', 5),
(316, 'ЗКЮО-31', 5),
(317, 'ЗНТМБ-11', 1),
(318, 'ОЗФТМБ-21', 4),
(319, 'ОЗННГБ-12', 1),
(320, 'ДТРРМ-11', 3),
(321, 'ЗФЭКС-51', 4),
(322, 'ДКЮО-21', 5),
(323, 'ЗКНС-21', 5),
(324, 'ЗРТТБ-41', 2),
(325, 'ДИБСС-31', 6),
(326, 'ДИААБ-21', 6),
(327, 'ДЮЮОБ-32', 4),
(328, 'ДРЭТБ-11', 2),
(329, 'ДНТМБ-11', 1),
(330, 'ЗБТТБ-11', 2),
(331, 'ДББББ-41', 2),
(332, 'ДБПОМ-21', 2),
(333, 'ЗЮЮОб-21', 4),
(334, 'ЗТЭСС-21', 3),
(335, 'ЗСССМ-11', 7),
(336, 'ВИБББ-11', 6),
(337, 'ЗФЭКС-11', 4),
(338, 'ВИБББ-41', 6),
(339, 'ДКХО-31', 5),
(340, 'ЗКСС-31', 5),
(341, 'ЗКСО-51', 5),
(342, 'ДКТС-11', 5),
(343, 'ОЗННГМ-22', 1),
(344, 'ДКМО-14', 5),
(345, 'ЗМНПБ-31', 3),
(346, 'ЗИСМБ-51', 6),
(347, 'ДИБСС-41', 6),
(348, 'ДИБББ-21', 6),
(349, 'ДИНРБ-21', 6),
(350, 'ДИССМ-11', 6),
(351, 'ДББББ-11', 2),
(352, 'ДБВСБ-11', 2),
(353, 'ДБЭЭБ-21', 2),
(354, 'ДБПКБ-31', 2),
(355, 'ДМХСМ-11', 3),
(356, 'ДНГГС-31', 1),
(357, 'ДИБББ-41', 6),
(358, 'ДРВАМ-11', 2),
(359, 'ДСАРБ-51', 7),
(360, 'ДНННБ-42', 1),
(361, 'ДФМГМ-21', 4),
(362, 'ЗТУОМ-11', 3),
(363, 'ЗИНРБ-11', 6),
(364, 'ДФЭЭБ-11', 4),
(365, 'ЗБЭЭБ-21', 2),
(366, 'ЗССПБ-41', 7),
(367, 'ДИНРБ-41', 6),
(368, 'ДКЮО-11', 5),
(369, 'ДКЭО-21', 5),
(370, 'ДКСО-31', 5),
(371, 'ДКЮО-12', 5),
(372, 'ЗБВСБ-11', 2),
(373, 'ДКПО-32', 5),
(374, 'ДКМО-21', 5),
(375, '#NULL!', NULL),
(376, 'ДНННБ-21', 1),
(377, 'ЗТЕТМ-31', 3),
(378, 'ЗБТТМ-21', 2),
(379, 'ЗКНО-11', 5),
(380, 'ЗКЭО-11', 5),
(381, 'ЗТЕТБ-52', 3),
(382, 'ЗТКСБ-41', 3),
(383, 'ЗМХСБ-52', 3),
(384, 'ЗНННБ-53', 1),
(385, 'ЗИССБ-31', 6),
(386, 'ДКНС-31', 5),
(387, 'ДКХО-41', 5),
(388, 'ДБФТБ-21', 2),
(389, 'ДТЭСС-21', 3),
(390, 'ДНХТБ-41', 1),
(391, 'ДИПРБ-41', 6),
(392, 'ДТЭСС-51', 3),
(393, 'ДТУОБ-41', 3),
(394, 'ДРТТМ-21', 2),
(395, 'ДББЭМ-11', 2),
(396, 'ДРЭТБ-41', 2),
(397, 'ЗТЭСС-11', 3),
(398, 'ЗРВАБ-31', 2),
(399, 'ЗБТТБ-21', 2),
(400, 'ЗФМУБ-51', 4),
(401, 'ЗНТМБ-41', 1),
(402, 'ЗБПКБ-51', 2),
(403, 'ЗРЭТБ-31', 2),
(404, 'ДКБО-31', 5),
(405, 'ЗКНС-41', 5),
(406, 'ЗНТММ-32', 1),
(407, 'ЗКЮС-31', 5),
(408, 'ЗББББ-31', 2),
(409, 'ДКТО-21', 5),
(410, 'ОЗННГМ-31', 1),
(411, 'ЗКАО-41', 5),
(412, 'ЗНТМБ-22', 1),
(413, 'ЗНТМБ-52', 1),
(414, 'ЗМТОБ-12', 3),
(415, 'ЗТЭЭБ-22', 3),
(416, 'ЗНТММ-12', 1),
(417, 'ЗНГГС-42', 1),
(418, 'ЗИИБМ-21', 6),
(419, 'ДИААБ-11', 6),
(420, 'ДИСМБ-21', 6),
(421, 'ДТЭСС-11', 3),
(422, 'ДРВАБ-11', 2),
(423, 'ДБПКБ-21', 2),
(424, 'ДФЭКС-31', 4),
(425, 'ДССПБ-21', 7),
(426, 'ДТЭАС-31', 3),
(427, 'ДТЕТМ-11', 3),
(428, 'ДНХТМ-11', 1),
(429, 'ДНХТБ-11', 1),
(430, 'ЗБЭЭБ-11', 2),
(431, 'ЗТККБ-51', 3),
(432, 'ДРРРБ-41', 2),
(433, 'ДББМБ-41', 2),
(434, 'ДЮЮОМ-11', 4),
(435, 'ЗНТМБ-12', 1),
(436, 'ЗИИЭБ-31', 6),
(437, 'ЗРТТБ-31', 2),
(438, 'ЗИИЭБ-21', 6),
(439, 'ЗФТМБ-31', 4),
(440, 'ЗФМУБ-31', 4),
(441, 'ЗНТМБ-51', 1),
(442, 'ВИБББ-51', 6),
(443, 'ДКЮС-11', 5),
(444, 'ДКБС-11', 5),
(445, 'ДКНС-21', 5),
(446, 'ДКАС-21', 5),
(447, 'ДФЭКС-52', 4),
(448, 'ДКРО-31', 5),
(449, 'ОЗННКМ-21', 1),
(450, 'ДКМС-11', 5),
(451, 'ДККО-21', 5),
(452, 'ДФГУМ-21', 4),
(453, 'ОЗНУММ-11', 1),
(454, 'ДТРРБ-21', 3),
(455, 'ЗНХТБ-41', 1),
(456, 'ЗБФТБ-51', 2),
(457, 'ЗМТОБ-22', 3),
(458, 'ЗННББ-52', 1),
(459, 'ЗНРМБ-52', 1),
(460, 'ЗНГГС-62', 1),
(461, 'ДНТММ-21', 1),
(462, 'ЗРТТБ-21', 2),
(463, 'ЗТККБ-31', 3),
(464, 'ЗИССБ-21', 6),
(465, 'ДРТТБ-11', 2),
(466, 'ДБФТБ-31', 2),
(467, 'ДФЭФБ-41', 4),
(468, 'ДМТОБ-31', 3),
(469, 'ДМЭАБ-31', 3),
(470, 'ДТУОБ-21', 3),
(471, 'ДНГГС-41', 1),
(472, 'ДНТМБ-31', 1),
(473, 'ДССПБ-41', 7),
(474, 'ДБЭЭМ-11', 2),
(475, 'ЗБФТБ-11', 2),
(476, 'ДБВСБ-41', 2),
(477, 'ДББММ-21', 2),
(478, 'ДФЭББ-31', 4),
(479, 'ЗНХТБ-31', 1),
(480, 'ЗТККБ-21', 3),
(481, 'ЗТЭЭБ-41', 3),
(482, 'ДКПО-21', 5),
(483, 'ОЗНТММ-21', 1),
(484, 'ДФЭЭБ-22', 4),
(485, 'ЗФЭТМ-11', 4),
(486, 'ДКЭС-21', 5),
(487, 'ДКЮС-21', 5),
(488, 'ЗИААМ-11', 6),
(489, 'ОЗНННБ-23', 1),
(490, 'ДКРО-41', 5),
(491, 'ДКРС-21', 5),
(492, 'ДКТО-11', 5),
(493, 'ДКИС-11', 5),
(494, 'ОЗФМПБ-11', 4),
(495, 'ДКВО-21', 5),
(496, 'ДФМОБ-41', 4),
(497, 'ДКГО-21', 5),
(498, 'ДКДО-13', 5),
(499, 'ДНУММ-11', 1),
(500, '#NULL!', NULL),
(501, 'ДКХС-21', 5),
(502, 'ДКПС-21', 5),
(503, 'ЗНХТБ-22', 1),
(504, 'ЗНРМБ-22', 1),
(505, 'ЗТЭАС-32', 3),
(506, 'ЗНГГС-52', 1),
(507, 'ЗИНРБ-41', 6),
(508, 'ЗКЮС-21', 5),
(509, 'ЗМЭАБ-31', 3),
(510, 'ЗКНО-51', 5),
(511, 'ВТККМ-31', 3),
(512, 'ДИСМБ-31', 6),
(513, 'ДТККБ-11', 3),
(514, 'ДРТТБ-21', 2),
(515, 'ДББББ-21', 2),
(516, 'ДФЭФБ-31', 4),
(517, 'ДФТМБ-21', 4),
(518, 'ДТККБ-21', 3),
(519, 'ДСАРБ-21', 7),
(520, 'ДЮЮОБ-41', 4),
(521, 'ЗТЕТБ-21', 3),
(522, 'ЗТЕТБ-31', 3),
(523, 'ЗРТТБ-11', 2),
(524, 'ДТУОМ-21', 3),
(525, 'ДНННБ-41', 1),
(526, 'ЗТУОБ-21', 3),
(527, 'ВИААМ-11', 6),
(528, 'ЗРЭТБ-41', 2),
(529, 'ЗБТТМ-31', 2),
(530, 'ЗТККБ-11', 3),
(531, 'ЗКНО-21', 5),
(532, 'ДКНО-22', 5),
(533, 'ЗНТМБ-32', 1),
(534, 'ДКАС-31', 5),
(535, 'ЗНННБ-43', 1),
(536, 'ЗББББ-41', 2),
(537, 'ОЗФМПБ-21', 4),
(538, 'ДКМС-21', 5),
(539, 'ОЗССПБ-11', 7),
(540, 'ДБТТМ-21', 2),
(541, 'ЗНННБ-51', 1),
(542, 'ВИББМ-11', 6),
(543, 'ЗКЮС-11', 5),
(544, 'ЗМЭАБ-32', 3),
(545, 'ДИИЭБ-31', 6),
(546, 'ДИААБ-31', 6),
(547, 'ДРВАБ-31', 2),
(548, 'ДРЭТБ-31', 2),
(549, 'ДББББ-31', 2),
(550, 'ДФМПБ-11', 4),
(551, 'ДМТОБ-41', 3),
(552, 'ДТУОМ-11', 3),
(553, 'ДИИЭБ-41', 6),
(554, 'ДТККМ-21', 3),
(555, 'ЗТЭСС-61', 3),
(556, 'ДФЭПБ-31', 4),
(557, 'ДССПБ-12', 7),
(558, 'ЗТУОБ-31', 3),
(559, 'ДФЭУМ-21', 4),
(560, 'ЗССПБ-21', 7),
(561, 'ЗБЭЭБ-41', 2),
(562, 'ЗБТТБ-31', 2),
(563, 'ВИБББ-31', 6),
(564, 'ДЮЮОМ-21', 4),
(565, 'ДННКМ-21', 1),
(566, 'ДКЕС-21', 5),
(567, 'ЗМНПМ-32', 3),
(568, 'ОЗФЭЭБ-11', 4),
(569, 'ЗТККМ-21', 3),
(570, '#NULL!', NULL),
(571, 'ДКСО-41', 5),
(572, 'ДКЕС-31', 5),
(573, 'ДФТРБ-41', 4),
(574, 'ЗНННБ-32', 1),
(575, 'ЗНГГС-22', 1),
(576, 'ОЗНХТМ-31', 1),
(577, 'ДИНРБ-11', 6),
(578, 'ДИСМБ-11', 6),
(579, 'ДМХСБ-11', 3),
(580, 'ДЮЮОБ-31', 4),
(581, 'ДБЭЭБ-31', 2),
(582, 'ДТЕТБ-21', 3),
(583, 'ДНРММ-11', 1),
(584, 'ДБЭЭМ-21', 2),
(585, 'ДТККБ-41', 3),
(586, 'ДББМБ-21', 2),
(587, 'ДССПБ-11', 7),
(588, 'ЗЮЮОБ-31', 4),
(589, 'ДФЭТМ-11', 4),
(590, 'ЗТУОМ-31', 3),
(591, 'ЗРВАБ-41', 2),
(592, 'ЗБФТБ-21', 2),
(593, 'ЗБТТБ-41', 2),
(594, 'ДТККМ-11', 3),
(595, 'ДТКСМ-21', 3),
(596, 'ДКНО-32', 5),
(597, 'ЗНТМБ-21', 1),
(598, 'ДКРС-11', 5),
(599, 'ЗНННБ-54', 1),
(600, 'ОЗНННБ-33', 1),
(601, 'ОЗННКМ-32', 1),
(602, 'ОЗФМГМ-11', 4),
(603, 'ДКИС-21', 5),
(604, 'ДККС-11', 5),
(605, 'ОЗННГБ-13', 1),
(606, 'ДФТРБ-31', 4),
(607, 'ЗНТМБ-42', 1),
(608, 'ЗНРМБ-32', 1),
(609, 'ЗНННБ-52', 1),
(610, 'ЗМЭАБ-52', 3),
(611, 'ЗНГГС-32', 1),
(612, 'ВИААМ-21', 6),
(613, 'ЗИНРБ-31', 6),
(614, 'ЗИНРБ-21', 6),
(615, 'ЗИССМ-11', 6),
(616, 'ДТЭЭБ-11', 3),
(617, 'ДБТТБ-11', 2),
(618, 'ДССПБ-31', 7),
(619, 'ДНРМБ-41', 1),
(620, 'ЗТЕТБ-11', 3),
(621, 'ДТЕТБ-41', 3),
(622, 'ДФЭПБ-41', 4),
(623, 'ЗТЭСС-31', 3),
(624, 'ДФМОМ-21', 4),
(625, 'ДФМОМ-11', 4),
(626, 'ЗБЭЭБ-31', 2),
(627, 'ЗФЭББ-31', 4),
(628, 'ДКБО-11', 5),
(629, 'ДКБС-21', 5),
(630, 'ДКЭО-31', 5),
(631, 'ОЗННКМ-31', 1),
(632, 'ВМХСБ-11', 3),
(633, 'ДКМО-13', 5),
(634, 'ЗСССМ-31', 7),
(635, 'ЗКЭС-31', 5),
(636, 'ДИБББ-11', 6),
(637, 'ДЮЮОБ-22', 4),
(638, 'ДФЭКС-11', 4),
(639, 'ДТЭСС-41', 3),
(640, 'ДМЭАБ-21', 3),
(641, 'ДТЭЭБ-31', 3),
(642, 'ДМХСБ-21', 3),
(643, 'ДНТМБ-21', 1),
(644, 'ДНРМБ-21', 1),
(645, 'ДСАРБ-41', 7),
(646, 'ДБТТМ-11', 2),
(647, 'ДРВАБ-41', 2),
(648, 'ДНННБ-31', 1),
(649, 'ЗРВАБ-21', 2),
(650, 'ЗРТТБ-51', 2),
(651, 'ЗФЭКС-41', 4),
(652, 'ЗКНО-31', 5),
(653, 'ЗИПРБ-51', 6),
(654, 'ЗКЭО-31', 5),
(655, 'ДКЮО-32', 5),
(656, 'ЗНННБ-44', 1),
(657, 'ЗБВСБ-21', 2),
(658, 'ОЗНННБ-43', 1),
(659, 'ОЗФЭЭМ-11', 4);

-- --------------------------------------------------------

--
-- Структура таблицы `exercises`
--

CREATE TABLE `exercises` (
  `ID_Exercise` bigint UNSIGNED NOT NULL,
  `Name` varchar(255) NOT NULL,
  `Description` text NOT NULL,
  `img` text NOT NULL,
  `Timer_seconds` int DEFAULT NULL,
  `ID_Test` bigint UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `exercises`
--

INSERT INTO `exercises` (`ID_Exercise`, `Name`, `Description`, `img`, `Timer_seconds`, `ID_Test`) VALUES
(1, 'Сгибание и разгибание рук в упоре лежа\r\n(отжимания выполняются юношами от пола, девушками от предметов не выше 50 см).', '<p><b>Исходное положение (ИП)</b> – упор лежа, голова-туловище-ноги составляют прямую линию.<br>\r\n<center><b>Условия выполнения теста.</b></center></p>\r\n<p>Сгибание рук выполняется до касания грудью пола, не нарушая прямой линии тела, а разгибание – до полного выпрямления рук, при сохранении прямой линии – «голова-туловище-ноги».<br>\r\nДается одна попытка. Фиксируется количество отжиманий от пола при условии правильного выполнения теста в произвольном темпе.</p>', '', NULL, 1),
(2, 'Поднимание туловища из положения лежа на спине.', '<p><b>Исходное положение (ИП)</b> – руки за головой, ноги согнуты в коленях, ступни закреплены.<br>\r\n<center><b>Условия выполнения теста.</b></center></p>\r\n<p>Выполняются сгибания (до прямого угла) и разгибания туловища (до касания согнутыми руками пола (или поверхности).<br>\r\nФиксируется количество выполненных упражнений в одной попытке за 30 секунд.</p>', '', 30, 1),
(3, 'Наклон вперед из положения сидя.', '<p><b>Исходное положение (ИП)</b> – на полу обозначить центральную и перпендикулярную линии. Сидя на полу, ступнями ног следует касаться центровой линии, ноги выпрямлены в коленях, ступни вертикальны, расстояние между ступнями составляет 20-30 см.<br>\r\n<center><b>Условия выполнения теста.</b></center></p>\r\n<p>Выполняется три наклона вперед, на четвертом регистрируется результат на перпендикулярной линии по кончикам пальцев при фиксации этого результата в течение 5 секунд, при этом не допускается сгибание ног в коленках.(см)</p>', '', 5, 1),
(4, 'Удержание упора лежа на полусогнутых руках.', '<p><b>Исходное положение (ИП)</b> – испытуемый принимает положение «упор лежа» и сгибает руки в локтях до 45⁰, после чего включается секундомер.<br>\r\n<center><b>Условия выполнения теста.</b></center></p>\r\n<p>Задача – максимально долго удержать «упор лежа» на полусогнутых руках. Упражнение прекращается при изменении угла сгибания в локтях. Оценивается время удержания позы (сек).</p>', '', NULL, 1),
(5, 'Ловля падающей линейки.', 'Данное задание можно выполнять единолично, но для объективности контроля и соответствия условиям проведения теста желательно привлечь помощника (товарища, родителя и т.д.).<br>\n<b>Оборудование:</b> линейка (гимнастическая палка) длиной 60 см, стул.<br><br>\n<center><b>Условия выполнения теста.</b></center><br>Испытуемый сидит на стуле лицом к спинке, на которой горизонтально расположена его рука. Пальцы рук распрямлены. В 1 см от них тестируемый вертикально удерживает за верхний конец линейку, установленную возле нижнего края открытой кисти испытуемого. Через 1-3 сек., проводящий тест отпускает линейку, а испытуемый должен ее поймать (схватить кистью) как можно быстрее.<br>\nИзмеряется расстояние, которое пролетит линейка от нижнего конца до нижнего края кисти испытуемого (см).<br> Проводится три попытки, учитывается лучший результат.', '', NULL, 1),
(6, 'Длительность удержания статического равновесия.', '<p><b>Исходное положение (ИП)</b> – стойка на одной ноге, другая согнута в колене и максимально развернута кнаружи. Ее пятка касается подколенной чашечки опорной ноги. Руки на поясе, голова прямо. По команде «Готов» испытуемый закрывает глаза, а экспериментатор секундомер.<br>\r\n<center><b>Условия выполнения теста.</b></center></p>\r\n<p>Дается опробование теста. Опорная нога должна быть прямой, а бедро как можно больше отведено кнаружи. Секундомер выключается сразу же в момент потери равновесия (схождения с места, приподнимание на пальцах ноги, переход на двойную опору, падение).\r\nОценивается средний показатель времени удержания равновесия (из 3-х попыток).(сек)</p>', '', NULL, 1),
(7, 'Теппинг-тест\r\n(оценивает силу нервной системы на основе определения ее\r\n                                функциональной выносливости и психомоторной работоспособности).', '<p>Данное задание можно выполнять единолично, но для объективности контроля времени и соответствия условиям проведения теста желательно привлечь помощника (товарища, родителя и т.д.).</p>\r\n<p><strong>Методика выполнения теппинг-теста:</strong></p>\r\n  <ul type=\"square\">\r\n   <li>На листе бумаги (в клетку) начертить 4 квадрата размером 10х10 клеток.</li>\r\n   <li>По готовности произнести команду «Начали» и шариковой ручкой начать с максимальной быстротой ставить точки \r\n       в первом квадрате за 10 секунд. По истечении 10-секундного отрезка времени звучит команда «Стоп».\r\n       Тестируемый отдыхает 20 секунд, а затем все повторяется со вторым, третьим и четвертым квадратами.</li>\r\n   <li>Подсчет точек в каждом квадрате осуществляют их соединением. Подсчитывается количество точек в каждом \r\n       квадрате и определяется их среднее арифметическое значение (Хср).</li>\r\n  </ul>', '', NULL, 1),
(8, 'Определение индекса массы тела (индекс Кетле).', '<center>Введите полученный индекс массы тела в поле данных.</center>\n               \n', '2.1ex.png', NULL, 2),
(9, 'Оценка реакции восстановления.', '<center><b>Условия проведения пробы.</b></center><br> \r\n<p>До начала упражнения измеряется пульс (ЧСС). Далее тестируемый выполняет 20 приседаний в течение 30 секунд.<br>\r\nРезультатом данной функциональной пробы является время восстановления пульса (ЧСС) до исходных (перед нагрузкой) значений (сек).<br>\r\n<b>Примечание.</b> Оценка пульса (ЧСС) производится в течение 1 минуты. Чтобы получить 1-минутное значение ЧСС можно измерить пульс в течение 10 секунд и умножить на 6, более точное измерение проводится в течение 15 секунд и умножить на 4.</p>', '', 15, 2),
(10, 'Оценка реакций сердечно-сосудистой системы (индекс Руфье).', '<center>Измерьте пульс за 15 секунд и введите результат(кол-во ударов).</center>', '', 15, 2),
(11, 'Оценка реакций сердечно-сосудистой системы (индекс Руфье).', '<center>Далее выполните 30 приседаний за 45 секунд, то есть в среднем темпе.\r\nСразу после приседаний измеряется пульс за 15 секунд(кол-во ударов).</center>', '', 15, 2),
(12, 'Оценка реакций сердечно-сосудистой системы (индекс Руфье).', '<center>Через 45 секунд снова определите количество ударов сердца за 15 секунд(кол-во ударов).</center>', '', 15, 2),
(13, 'Оценка уровня обменно-энергетических процессов организма (индекс Робинсона).', '<p>Данный индекс характеризует систолическую работу сердца. Чем больше этот показатель на высоте физической нагрузки, тем больше функциональная способность мышц сердца. По этому показателю косвенно можно судить о потреблении кислорода миокардом.</p> \r\n<p><center><b>Условия проведения пробы.</b></center></p>\r\n<p>После 5-минутного отдыха определите пульс за одну минуту в положении стоя (уд/мин).</p>', '', 60, 2),
(14, 'Оценка уровня обменно-энергетических процессов организма (индекс Робинсона).', '<p>Измерьте свое артериальное давление и запомните его «верхнее» значение.<br></p>\r\n<b>Внимание! Пробы с задержкой дыхания лицам с какими-либо заболеваниями органов дыхания следует выполнять с осторожностью!</b>', '', NULL, 2),
(15, 'Оценка состояния дыхательной системы (проба Штанге).', '<p>Проба Штанге – время задержки дыхания на вдохе (сек).</p>\r\n<p><center><b>Условия проведения пробы.</b></center></p>\r\n<p>Сесть на стул, удобно оперевшись о его спинку, и расслабить мышцы.<br>\r\nСделать глубокий вдох и выдох, затем снова вдох (примерно 80% от максимального) и задержать дыхание, зажав пальцами нос.<br>\r\nПо секундомеру (или секундной стрелки часов) фиксируется время максимальной задержки дыхания (сек).</p>', '', NULL, 2),
(16, 'Оценка состояния дыхательной системы (проба Генче).', '<p>Проба Генче – время задержки дыхания на выдохе (сек).</p>\r\n<p><center><b>Условия выполнения теста.</b></center></p>\r\n<p>Сесть на стул, удобно оперевшись о его спинку, и расслабить мышцы.\r\nСделать глубокий вдох и выдох, затем снова вдох и на максимальном выдохе задержать дыхание, зажав пальцами нос.<br>\r\nПо секундомеру (или секундной стрелки часов) фиксируется время максимальной задержки дыхания (сек).<br>\r\n<b>Примечание.</b> По функциональным особенностям дыхательной системы время задержки дыхания на выдохе всегда меньше, чем время задержки дыхания на вдохе. Если проба Генче выполняется сразу после пробы Штанге, то необходим отдых между пробами 7-10 минут.</p>', '', NULL, 2),
(17, 'Трехфазная проба (проба Серкина).', 'Данная комплексная проба оценивает функцию дыхания и состоит из 3-х фаз:\r\n<ul>\r\n     <li>После пятиминутного отдыха определить время задержки дыхания на вдохе \r\n         в положении сидя (сек).</li>\r\n     <li>Выполнить 20 приседаний за 30 секунд и вновь определить время \r\n         задержки дыхания на вдохе (сек).</li>\r\n     <li>Отдохнуть ровно 1 минуту (в положении стоя) и повторить фазу 1.</li>\r\n</ul>\r\nИтоговая оценка производится по результатам фазы 3 (сек).', '', 30, 2),
(18, 'Оценка вегетативных реакций на нагрузку (ортостатическая проба)', '<p><center><b>Условия проведения пробы.</b></center></p>\r\n<p>В положении стоя подсчитывается пульс за 10 сек и умножается на 6.\r\nЗатем нужно спокойно встать и подсчитать пульс в положении стоя.\r\nФиксируется разница (превышение) значений пульса между показателями в положении лежа и стоя (п.п. 1 и 2).</p>', '', 60, 2),
(19, 'Оценка вегетативных реакций на нагрузку (клиностатическая проба)', 'Выполняется в обратном порядке при переходе из положения стоя в положение лежа.<br>\r\nФиксируется разница (уменьшение) значений пульса между показателями в положении стоя и лежа.\r\n', '', 60, 2),
(21, 'Оценка силовой выносливости (тест Юхаша).Часть 1.', '<center>Испытание включает в себя 6 упражнений: \r\n1-е упражнение – сгибание и разгибание рук в упоре лежа в течение 1 минуты (кол-во раз);</center>', '', 60, 3),
(22, 'Оценка силовой выносливости (тест Юхаша).Часть 2.', '<center>2-е упражнение – поднимание туловища (в сед) из положения лежа в течение 1 минуты (кол-во раз); </center>\r\n', '', 60, 3),
(23, 'Оценка силовой выносливости (тест Юхаша).Часть 3.', '<center>3-е упражнение – отведение ноги в сторону (из положения стоя) в течение 1 минуты (кол-во раз); </center>', '', 60, 3),
(24, 'Оценка силовой выносливости (тест Юхаша).Часть 4.', '<center>4-е упражнение – свободный сед с поднятыми ногами, сгибание и разгибание ног в течение 1 минуты (кол-во раз);</center> ', '', 60, 3),
(25, 'Оценка силовой выносливости (тест Юхаша).Часть 5.', '<center>5-е упражнение – поднимание туловища из положения лежа лицом вниз, ноги от пола не отрываются в течение 30 секунд (кол-во раз); </center>', '', 30, 3),
(26, 'Оценка силовой выносливости (тест Юхаша).Часть 6.', '<center>6-е упражнение – поднимание ног в положении лежа лицом вниз, туловище от пола не отрывается в течение 30 секунд (кол-во раз). \r\nИспытание длится 5 минут без пауз между упражнениями.</center>', '', 30, 3),
(27, 'Статическая силовая выносливость мышц рук.', '<p>Удержание угла в висе на согнутых руках (раз). </p>\r\n<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Испытуемый с помощью партнера или стула принимает и.п. – вис на согнутых руках (хват снизу), подбородок расположен над перекладиной. Угол между туловищем и бедрами 90⁰. По сигналу необходимо удержать это положение как можно дольше. Секундомер останавливается после того как подбородок испытуемого опустится ниже перекладины.</p>\r\n', '', NULL, 3),
(28, 'Проба Ромберга. ', '<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Испытуемый должен стоять так, чтобы ноги его были на одной линии, при этом пятка одной ноги касается носка другой ноги, глаза закрыты, руки вытянуты вперед, пальцы разведены.<br>\r\nОценивается удержания позы и степень устойчивости (с).</p>\r\n', '', NULL, 3),
(29, 'Прыжки на одной (толчковой) ноге 20 м. Оценивается скоростно-силовая выносливость и быстрота двигательной реакции.', '<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Выполняются прыжки на одной (толчковой) ноге по прямой линии длиной 20 метров. Регистрируется время прохождения дистанции (с). На дистанции испытуемый не должен касаться пола второй ногой.</p>', '', NULL, 3),
(30, 'Тест на координированность (согласованность) движений. ', '<p>Ассиметрично согласованные движения рук, ног, головы различной координационной сложности. </p>\r\n<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>После называния и показа каждого упражнения оно изучается испытуемыми. Упражнение выполняется 2 раза совместно с проводящим в медленном темпе, 1 раз в среднем темпе, 1 раз в быстром темпе. Контрольное упражнение выполняется 1 раз в среднем темпе и 1 раз в быстром темпе. Определяется точность и время выполнения (сек):\r\n<ol>\r\n     <li>И.П. – основная стойка;</li>\r\n     <li>правая рука на пояс;</li>\r\n     <li>левая рука к плечу;</li>\r\n     <li>правая рука к плечу;</li>\r\n     <li>левая рука вверх;</li>\r\n     <li>правая рука вверх;</li>\r\n     <li>два хлопка над головой.</li>\r\n</ol>\r\n\r\nВыполнить то же в обратной последовательности.</p>\r\n', '', NULL, 3),
(31, 'ЧСС в состоянии покоя.', 'Подсчитывается частота сердечных сокращений в состоянии покоя (в положении лёжа) за минуту.<br>\r\n(Введите ЧСС за первую минуту)', '', 60, 4),
(32, 'ЧСС в состоянии стоя.', 'Испытуемый встает, и у него подсчитывают ЧСС за вторую минуту пребывания в вертикальном положении.<br>\r\n(Введите ЧСС за вторую минуту)', '', 60, 4),
(33, 'Выполнение физических упражнений и считывание ЧСС 1.1.', 'Испытуемый делает 20 глубоких приседаний в течение 40 с (во время  приседания руки энергично вытягиваются вперёд, при вставании – опускаются). Подсчитывается ЧСС за первую минуту восстановления.<br>\r\n(Введите ЧСС за первую минуту восстановления)', '', 60, 4),
(34, 'Выполнение физических упражнений и считывание ЧСС 1.2.', 'Подсчитывается ЧСС за вторую, минуту восстановления.<br>\r\n(Введите ЧСС за вторую минуту восстановления)', '', 60, 4),
(35, 'Выполнение физических упражнений и считывание ЧСС 1.3.', 'Подсчитывается ЧСС за третью, минуту восстановления.<br>\r\n(Введите ЧСС за третью минуту восстановления)', '', 60, 4),
(36, 'Измерения роста стоя.', '<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Встать в положение «смирно», выпрямив грудь, подобрав живот, тремя точками касаясь вертикальной стойки стены − пятками, ягодицами, лопатками. Голова в положении, при котором наружный угол глаза и наружный слуховой проход находятся на одном уровне(см).</p>', '', NULL, 5),
(37, 'Измерение роста сидя.', '<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Сесть так, чтобы ноги подошвами стояли на полу, были согнуты в коленях под углом 90°. Измерить длину от сидения стула до макушки головы.\r\nЗаписать в поле (в см).</p>\r\n', '', NULL, 5),
(38, 'Рост родителей.', '<center>Введите рост отца(в см).</center>', '', NULL, 5),
(39, 'Рост родителей.', '<center>Введите рост матери (см).</center>', '', NULL, 5),
(40, 'Масса тела.', '<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Снять обувь и осторожно встать на платформу напольных весов и определить свою массу тела (вес в кг).</p>', '', NULL, 5),
(41, 'Длина ног.', '<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Длина ног измеряется сантиметровой лентой от большого вертела бедренной кости до опорной поверхности. Обследуемый становится по стойке «смирно»(в см).</p>', '5.1ex.png', NULL, 5),
(42, 'Окружность самой полной части голени.', '<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Окружность самой полной части голени измеряется путем наложения сантиметровой ленты сзади на выступающую точку голени (в см).</p>', '', NULL, 5),
(43, 'Измерить окружность грудной клетки в покое.', '<p><center><b>Условия выполнения задания</b></center></p>\r\n<p>Сантиметровую ленту накладывают у мужчин и детей сзади по нижним углам лопаток, спереди – по нижнему краю околососковых кружков. У женщин и девушек спереди над грудными железами, а сзади – как у мужчин(в см).</p>', '5.8ex.png', NULL, 5),
(44, 'Измерить окружность грудной клетки при максимальном вдохе.', '<p><center><b>Условия выполнения задания</b></center></p> <p>Сантиметровую ленту накладывают у мужчин и детей сзади по нижним углам лопаток, спереди – по нижнему краю околососковых кружков. У женщин и девушек спереди над грудными железами, а сзади – как у мужчин.<br>При измерении сделать максимально возможный вдох(в см).</p>', '', NULL, 5),
(45, 'Измерить окружность грудной клетки при максимальном выдохе.', '<p><center><b>Условия выполнения задания</b></center></p> <p>Сантиметровую ленту накладывают у мужчин и детей сзади по нижним углам лопаток, спереди – по нижнему краю околососковых кружков. У женщин и девушек спереди над грудными железами, а сзади – как у мужчин.<br>При измерении сделать максимально возможный выдох(в см).</p>', '', NULL, 5),
(46, 'Подъем, личная гигиена', 'Личная гигиена направлена на сохранение и укрепление индивидуального здоровья человека.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.1ex.png', NULL, 6),
(47, 'Завтрак (прием пищи сидя)', 'Завтрак полезен для человека тем, что стимулирует синтез гастроинтестинальных гормонов, которые участвую в интенсивности аппетита. К этому привели наблюдения, что человек, который регулярно плотно питается поутру, более длительное время испытывает чувство сытости и есть в течение дня меньше.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.2ex.png', NULL, 6),
(48, 'Ходьба на учебу', 'Образование помогает человеку раскрыть потенциал, учиться чему-то новому, быть грамотным и нравственным. Если каждый день человек будет повышать планку, добиваться новых высот, самосовершенствоваться, искать ответы на интересующие вопросы, то это обеспечит ему комфортную, яркую, насыщенную жизнь.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.3ex.png', NULL, 6),
(49, 'Умственная работа сидя', 'Польза умственного труда заключается в том, что человек постоянно стимулирует свой мозг и «прокачивает» его способности: память, абстрактное мышление, фантазию и т. д.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.4ex.png', NULL, 6),
(50, 'Ходьба с учебы домой', 'Ходьба не имеет противопоказаний. Она может быть средством для восстановления стройности или применяться как терапия после перенесенных болезней. Также ходьба способствует развитию выносливости, улучшению физической формы, предотвращению возникновения разных болезней и возможности сохранить активность на долгие годы.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.3ex.png', NULL, 6),
(51, 'Личная гигиена', 'В отличие от общественной гигиены, целью которой является укрепление здоровья всего населения или здоровье популяции, личная гигиена направлена на сохранение и укрепление индивидуального здоровья человека.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.1ex.png', NULL, 6),
(52, 'Обед (прием пищи сидя)', 'Самый важный прием пищи – это обед. Именно в это время человек начинает уставать, так как израсходованы запасы энергии, полученные с пищей во время завтрака.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.2ex.png', NULL, 6),
(53, 'Отдых лежа ', 'Отдых – это специальная работа по восстановлению ваших сил и энергии.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.8ex.png', NULL, 6),
(54, 'Плавание', 'Занятия плаванием устраняют нарушения осанки, плоскостопие, гармонично развивают почти все группы мышц - особенно плечевого пояса, рук, груди, живота, спины и ног. Занятия плаванием совершенствуют работу вестибулярного аппарата, улучшают чувство равновесия.<br> <b>Введите продолжительность действия (в мин).</b>', '6.9ex.png', NULL, 6),
(55, 'Физические упражнения', 'Физические упражнения оказывают на все обменные процессы, усиливают функции кровеносной и лимфатической систем, а особенно положительно влияют на психику человека. Они повышают тонус нервной системы, стимулируют работу желез внутренней секреции, улучшаются обменные процессы.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.10ex.png', NULL, 6),
(56, 'Уборка', 'Домашняя уборка сжигает калории, а еще высвобождает эндорфины и химические вещества, улучшающие самочувствие. Поэтому любой вид уборки, даже вынос мусора и организация порядка в шкафу или детской, уменьшает беспокойство и положительно влияет на наше психическое здоровье.<br>\r\n<b>Введите продолжительность действия (в мин).</b>', '6.11ex.png', NULL, 6);

-- --------------------------------------------------------

--
-- Структура таблицы `faculty`
--

CREATE TABLE `faculty` (
  `id_faculty` int NOT NULL,
  `Name` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `faculty`
--

INSERT INTO `faculty` (`id_faculty`, `Name`) VALUES
(7, 'ИНСТИТУТ ГРАДОСТРОИТЕЛЬСТВА'),
(6, 'ИНСТИТУТ ИНФОРМАЦИОННЫХ ТЕХНОЛОГИЙ И КОММУНИКАЦИЙ'),
(3, 'ИНСТИТУТ МОРСКИХ ТЕХНОЛОГИЙ, ЭНЕРГЕТИКИ И ТРАНСПОРТА'),
(1, 'ИНСТИТУТ НЕФТИ И ГАЗА'),
(2, 'ИНСТИТУТ РЫБНОГО ХОЗЯЙСТВА, БИОЛОГИИ И ПРИРОДОПОЛЬЗОВАНИЯ'),
(4, 'ИНСТИТУТ ЭКОНОМИКИ'),
(5, 'ФАКУЛЬТЕТ СРЕДНЕГО ПРОФЕССИОНАЛЬНОГО ОБРАЗОВАНИЯ');

-- --------------------------------------------------------

--
-- Структура таблицы `migrations`
--

CREATE TABLE `migrations` (
  `id` int UNSIGNED NOT NULL,
  `migration` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `migrations`
--

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(1, '2019_12_14_000001_create_personal_access_tokens_table', 1),
(2, '2021_12_05_133404_user', 1),
(3, '2021_12_05_144728_create_users_table', 2),
(4, '2021_12_05_144859_create_tests_table', 3),
(5, '2021_12_05_150337_create_users_table', 4),
(6, '2021_12_07_154628_create_tests_table', 5),
(7, '2021_12_07_155444_create_tests_table', 6),
(8, '2021_12_07_155653_create_tests_table', 7),
(9, '2022_01_24_115347_create_normatives_table', 8);

-- --------------------------------------------------------

--
-- Структура таблицы `normatives1`
--

CREATE TABLE `normatives1` (
  `id` bigint UNSIGNED NOT NULL,
  `gender` varchar(3) CHARACTER SET utf8mb3 COLLATE utf8_general_ci NOT NULL,
  `age` int NOT NULL,
  `ID_Test` bigint UNSIGNED NOT NULL,
  `ID_Exercise` bigint UNSIGNED NOT NULL,
  `Value` double NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `normatives1`
--

INSERT INTO `normatives1` (`id`, `gender`, `age`, `ID_Test`, `ID_Exercise`, `Value`) VALUES
(1, 'муж', 17, 1, 1, 40),
(2, 'муж', 18, 1, 1, 42),
(3, 'муж', 19, 1, 1, 43),
(4, 'муж', 20, 1, 1, 44),
(5, 'муж', 21, 1, 1, 44),
(6, 'муж', 22, 1, 1, 44),
(7, 'муж', 23, 1, 1, 43),
(8, 'муж', 17, 1, 2, 23),
(9, 'муж', 18, 1, 2, 24),
(10, 'муж', 19, 1, 2, 25),
(11, 'муж', 20, 1, 2, 25),
(12, 'муж', 21, 1, 2, 25),
(13, 'муж', 22, 1, 2, 25),
(14, 'муж', 23, 1, 2, 24),
(15, 'муж', 17, 1, 3, 11),
(16, 'муж', 18, 1, 3, 11),
(17, 'муж', 19, 1, 3, 10),
(18, 'муж', 20, 1, 3, 10),
(19, 'муж', 21, 1, 3, 9),
(20, 'муж', 22, 1, 3, 9),
(21, 'муж', 23, 1, 3, 8),
(22, 'муж', 17, 1, 4, 70),
(23, 'муж', 18, 1, 4, 80),
(24, 'муж', 19, 1, 4, 90),
(25, 'муж', 20, 1, 4, 100),
(26, 'муж', 21, 1, 4, 110),
(27, 'муж', 22, 1, 4, 110),
(28, 'муж', 23, 1, 4, 100),
(29, 'муж', 17, 1, 5, 17),
(30, 'муж', 18, 1, 5, 18),
(31, 'муж', 19, 1, 5, 19),
(32, 'муж', 20, 1, 5, 19),
(33, 'муж', 21, 1, 5, 20),
(34, 'муж', 22, 1, 5, 22),
(35, 'муж', 23, 1, 5, 22),
(36, 'муж', 17, 1, 6, 20.7),
(37, 'муж', 18, 1, 6, 21),
(38, 'муж', 19, 1, 6, 22),
(39, 'муж', 20, 1, 6, 22),
(40, 'муж', 21, 1, 6, 23),
(41, 'муж', 22, 1, 6, 23),
(42, 'муж', 23, 1, 6, 22),
(47, 'муж', 17, 1, 7, 77),
(48, 'муж', 18, 1, 7, 76.5),
(49, 'муж', 19, 1, 7, 73.5),
(50, 'муж', 20, 1, 7, 66.5),
(51, 'муж', 21, 1, 7, 64.5),
(52, 'муж', 22, 1, 7, 64),
(53, 'муж', 23, 1, 7, 63.5),
(54, 'жен', 17, 1, 1, 16),
(55, 'жен', 18, 1, 1, 16),
(56, 'жен', 19, 1, 1, 16),
(57, 'жен', 20, 1, 1, 15),
(58, 'жен', 21, 1, 1, 15),
(59, 'жен', 22, 1, 1, 15),
(60, 'жен', 23, 1, 1, 14),
(61, 'жен', 17, 1, 2, 21),
(62, 'жен', 18, 1, 2, 21),
(63, 'жен', 19, 1, 2, 20),
(64, 'жен', 20, 1, 2, 19),
(65, 'жен', 21, 1, 2, 18),
(66, 'жен', 22, 1, 2, 17),
(67, 'жен', 23, 1, 2, 16),
(68, 'жен', 17, 1, 3, 13),
(69, 'жен', 18, 1, 3, 13),
(70, 'жен', 19, 1, 3, 13),
(71, 'жен', 20, 1, 3, 12),
(72, 'жен', 21, 1, 3, 12),
(73, 'жен', 22, 1, 3, 11),
(74, 'жен', 23, 1, 3, 10),
(75, 'жен', 17, 1, 4, 55),
(76, 'жен', 18, 1, 4, 60),
(77, 'жен', 19, 1, 4, 60),
(78, 'жен', 20, 1, 4, 65),
(79, 'жен', 21, 1, 4, 65),
(80, 'жен', 22, 1, 4, 70),
(81, 'жен', 23, 1, 4, 65),
(82, 'жен', 17, 1, 5, 20),
(83, 'жен', 18, 1, 5, 20),
(84, 'жен', 19, 1, 5, 21),
(85, 'жен', 20, 1, 5, 22),
(86, 'жен', 21, 1, 5, 23),
(87, 'жен', 22, 1, 5, 23),
(88, 'жен', 23, 1, 5, 24),
(89, 'жен', 17, 1, 6, 20.7),
(90, 'жен', 18, 1, 6, 21),
(91, 'жен', 19, 1, 6, 22),
(92, 'жен', 20, 1, 6, 22),
(93, 'жен', 21, 1, 6, 23),
(94, 'жен', 22, 1, 6, 23),
(95, 'жен', 23, 1, 6, 22),
(96, 'жен', 17, 1, 7, 73),
(97, 'жен', 18, 1, 7, 73.5),
(98, 'жен', 19, 1, 7, 70),
(99, 'жен', 20, 1, 7, 64.5),
(100, 'жен', 21, 1, 7, 62.5),
(101, 'жен', 22, 1, 7, 64),
(102, 'жен', 23, 1, 7, 60.5);

-- --------------------------------------------------------

--
-- Структура таблицы `normatives2`
--

CREATE TABLE `normatives2` (
  `id` bigint UNSIGNED NOT NULL,
  `level` int NOT NULL,
  `gender` text NOT NULL,
  `Value` double NOT NULL,
  `id_exercise` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `normatives2`
--

INSERT INTO `normatives2` (`id`, `level`, `gender`, `Value`, `id_exercise`) VALUES
(1, 1, 'муж', 501, 1),
(2, 2, 'муж', 451, 1),
(3, 3, 'муж', 401, 1),
(4, 4, 'муж', 375, 1),
(5, 1, 'муж', 3, 2),
(6, 2, 'муж', 2, 2),
(7, 3, 'муж', 1.3, 2),
(8, 4, 'муж', 1, 2),
(9, 1, 'муж', 10, 3),
(10, 2, 'муж', 6, 3),
(11, 3, 'муж', 3, 3),
(12, 4, 'муж', 0, 3),
(13, 1, 'муж', 111, 4),
(14, 2, 'муж', 95, 4),
(15, 3, 'муж', 85, 4),
(16, 4, 'муж', 70, 4),
(17, 1, 'муж', 30, 5),
(18, 2, 'муж', 39, 5),
(19, 3, 'муж', 60, 5),
(20, 4, 'муж', 89, 5),
(21, 1, 'муж', 19, 6),
(22, 2, 'муж', 24, 6),
(23, 3, 'муж', 30, 6),
(24, 4, 'муж', 59, 6),
(25, 1, 'муж', 24, 7),
(26, 2, 'муж', 34, 7),
(27, 3, 'муж', 55, 7),
(28, 4, 'муж', 59, 7),
(29, 1, 'муж', 21, 8),
(30, 2, 'муж', 15, 8),
(31, 3, 'муж', 10, 8),
(32, 4, 'муж', 0, 8),
(33, 1, 'муж', 11, 9),
(34, 3, 'муж', 4, 9),
(35, 4, 'муж', 3, 9),
(36, 1, 'жен', 451, 1),
(37, 2, 'жен', 401, 1),
(38, 3, 'жен', 375, 1),
(39, 4, 'жен', 351, 1),
(40, 1, 'жен', 3, 2),
(41, 2, 'жен', 2, 2),
(42, 3, 'жен', 1.3, 2),
(43, 4, 'жен', 1, 2),
(44, 1, 'жен', 10, 3),
(45, 2, 'жен', 6, 3),
(46, 3, 'жен', 3, 3),
(47, 4, 'жен', 0, 3),
(48, 1, 'жен', 111, 4),
(49, 2, 'жен', 95, 4),
(50, 3, 'жен', 85, 4),
(51, 4, 'жен', 70, 4),
(52, 1, 'жен', 30, 5),
(53, 2, 'жен', 39, 5),
(54, 3, 'жен', 60, 5),
(55, 4, 'жен', 89, 5),
(58, 1, 'жен', 19, 6),
(59, 2, 'жен', 24, 6),
(60, 3, 'жен', 30, 6),
(61, 4, 'жен', 59, 6),
(62, 1, 'жен', 24, 7),
(63, 2, 'жен', 34, 7),
(64, 3, 'жен', 55, 7),
(65, 4, 'жен', 59, 7),
(66, 1, 'жен', 21, 8),
(67, 2, 'жен', 15, 8),
(68, 3, 'жен', 10, 8),
(69, 4, 'жен', 0, 8),
(70, 1, 'жен', 11, 9),
(71, 3, 'жен', 4, 9),
(72, 4, 'жен', 3, 9);

-- --------------------------------------------------------

--
-- Структура таблицы `normatives3`
--

CREATE TABLE `normatives3` (
  `id` bigint UNSIGNED NOT NULL,
  `level` int NOT NULL,
  `gender` text NOT NULL,
  `Value` double NOT NULL,
  `id_exercise` bigint UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `normatives3`
--

INSERT INTO `normatives3` (`id`, `level`, `gender`, `Value`, `id_exercise`) VALUES
(1, 1, 'муж', 213, 26),
(2, 2, 'муж', 218, 26),
(3, 3, 'муж', 223, 26),
(4, 4, 'муж', 228, 26),
(5, 5, 'муж', 233, 26),
(6, 1, 'муж', 10, 27),
(7, 2, 'муж', 23, 27),
(8, 3, 'муж', 35, 27),
(9, 4, 'муж', 47, 27),
(10, 5, 'муж', 60, 27),
(11, 1, 'муж', 9.4, 28),
(12, 2, 'муж', 19.2, 28),
(13, 3, 'муж', 29.1, 28),
(14, 4, 'муж', 39, 28),
(15, 5, 'муж', 99999999, 28),
(16, 1, 'муж', 5.6, 29),
(17, 2, 'муж', 5.4, 29),
(18, 3, 'муж', 5.2, 29),
(19, 4, 'муж', 5, 29),
(20, 5, 'муж', 4.8, 29),
(21, 1, 'муж', 25, 30),
(22, 2, 'муж', 22, 30),
(23, 3, 'муж', 20, 30),
(24, 4, 'муж', 18, 30),
(25, 5, 'муж', -99999, 30),
(26, 1, 'жен', 205, 26),
(27, 2, 'жен', 210, 26),
(28, 3, 'жен', 215, 26),
(29, 4, 'жен', 220, 26),
(30, 5, 'жен', 225, 26),
(31, 1, 'жен', 5, 27),
(32, 2, 'жен', 9, 27),
(33, 3, 'жен', 13, 27),
(34, 4, 'жен', 17, 27),
(35, 5, 'жен', 21, 27),
(36, 1, 'жен', 9.4, 28),
(37, 2, 'жен', 19.2, 28),
(38, 3, 'жен', 29.1, 28),
(39, 4, 'жен', 39, 28),
(40, 5, 'жен', 9999999, 28),
(41, 1, 'жен', 5.8, 29),
(42, 2, 'жен', 5.6, 29),
(43, 3, 'жен', 5.4, 29),
(44, 4, 'жен', 5.2, 29),
(45, 5, 'жен', 5, 29),
(46, 1, 'жен', 25, 30),
(47, 2, 'жен', 22, 30),
(48, 3, 'жен', 20, 30),
(49, 4, 'жен', 18, 30),
(50, 5, 'жен', -999999, 30);

-- --------------------------------------------------------

--
-- Структура таблицы `normatives5`
--

CREATE TABLE `normatives5` (
  `id` bigint UNSIGNED NOT NULL,
  `rise` double NOT NULL,
  `asthenics` double NOT NULL,
  `normosthenics` double NOT NULL,
  `hypersthenics` double NOT NULL,
  `gender` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `normatives5`
--

INSERT INTO `normatives5` (`id`, `rise`, `asthenics`, `normosthenics`, `hypersthenics`, `gender`) VALUES
(1, 155, 49.3, 56, 62.2, 'муж'),
(2, 157.5, 51.7, 58, 64, 'муж'),
(3, 160, 53.5, 60, 66, 'муж'),
(4, 162.5, 55.3, 61.7, 68, 'муж'),
(5, 165, 57.1, 63.5, 69.5, 'муж'),
(6, 167.5, 59.3, 65.8, 71.8, 'муж'),
(7, 170, 60.5, 67.8, 73.8, 'муж'),
(8, 172.5, 63.3, 69.7, 76.8, 'муж'),
(9, 175, 65.3, 71.7, 77.8, 'муж'),
(10, 180, 68.9, 75.2, 81.2, 'муж'),
(11, 182.5, 70.9, 77.2, 83.6, 'муж'),
(12, 185, 72.8, 79.2, 85.2, 'муж');

-- --------------------------------------------------------

--
-- Структура таблицы `normatives6`
--

CREATE TABLE `normatives6` (
  `id` int NOT NULL,
  `Value` decimal(10,6) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `normatives6`
--

INSERT INTO `normatives6` (`id`, `Value`) VALUES
(1, '0.032900'),
(2, '0.023600'),
(3, '0.069000'),
(4, '0.025000'),
(5, '0.069000'),
(6, '0.032900'),
(7, '0.023600'),
(8, '0.018300'),
(9, '0.175900'),
(10, '0.064800'),
(11, '0.079000');

-- --------------------------------------------------------

--
-- Структура таблицы `ofp`
--

CREATE TABLE `ofp` (
  `id` int NOT NULL,
  `id_user` int NOT NULL,
  `id_normative` int NOT NULL,
  `result` float NOT NULL,
  `date` date NOT NULL,
  `actual_class_id` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `ofp`
--

INSERT INTO `ofp` (`id`, `id_user`, `id_normative`, `result`, `date`, `actual_class_id`) VALUES
(20, 16, 1, 10, '2022-05-21', 2),
(21, 16, 2, 250, '2022-05-21', 2),
(104, 14, 2, 280, '2022-06-10', 1),
(105, 14, 5, 8, '2022-06-10', 1),
(106, 14, 9, 18, '2022-06-10', 1),
(107, 15, 2, 270, '2022-06-10', 1),
(108, 17, 1, 10, '2022-06-10', 1),
(109, 17, 2, 250, '2022-06-10', 1),
(110, 17, 5, 4, '2022-06-10', 1),
(111, 18, 2, 320, '2022-06-10', 1),
(112, 19, 5, 7, '2023-06-10', 1);

-- --------------------------------------------------------

--
-- Структура таблицы `ofp_assessment_tests`
--

CREATE TABLE `ofp_assessment_tests` (
  `id` int NOT NULL,
  `male_normative` decimal(10,2) NOT NULL,
  `female_normative` decimal(10,2) NOT NULL,
  `score` int NOT NULL,
  `id_ofp_test` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `ofp_assessment_tests`
--

INSERT INTO `ofp_assessment_tests` (`id`, `male_normative`, `female_normative`, `score`, `id_ofp_test`) VALUES
(1, '14.30', '13.10', 1, 1),
(2, '14.00', '13.00', 2, 1),
(3, '13.40', '12.30', 3, 1),
(4, '13.00', '11.30', 4, 1),
(5, '12.00', '10.50', 5, 1),
(6, '370.00', '270.00', 1, 2),
(7, '375.00', '280.00', 2, 2),
(8, '380.00', '290.00', 3, 2),
(9, '400.00', '300.00', 4, 2),
(10, '430.00', '320.00', 5, 2),
(11, '210.00', '170.00', 1, 3),
(12, '215.00', '175.00', 2, 3),
(13, '225.00', '180.00', 3, 3),
(14, '230.00', '190.00', 4, 3),
(15, '240.00', '195.00', 5, 3),
(16, '8.00', '9.00', 1, 4),
(17, '7.90', '8.90', 2, 4),
(18, '7.70', '8.80', 3, 4),
(19, '7.50', '8.40', 4, 4),
(20, '7.10', '8.20', 5, 4),
(21, '10.00', '10.00', 1, 5),
(22, '11.00', '11.00', 2, 5),
(23, '12.00', '12.00', 3, 5),
(24, '13.00', '15.00', 4, 5),
(25, '15.00', '18.00', 5, 5),
(26, '33.00', '14.00', 1, 6),
(27, '34.00', '15.00', 2, 6),
(28, '35.00', '17.00', 3, 6),
(29, '36.00', '19.00', 4, 6),
(30, '37.00', '21.00', 5, 6),
(31, '14.40', '17.80', 1, 7),
(32, '14.20', '17.60', 2, 7),
(33, '13.90', '17.40', 3, 7),
(34, '13.50', '17.00', 4, 7),
(35, '16.40', '13.10', 5, 7),
(36, '6.00', '8.00', 1, 8),
(37, '7.00', '10.00', 2, 8),
(38, '8.00', '11.00', 4, 8),
(39, '10.00', '15.00', 3, 8),
(40, '13.00', '16.00', 5, 8),
(41, '33.00', '33.00', 1, 9),
(42, '35.00', '34.00', 2, 9),
(43, '37.00', '35.00', 3, 9),
(44, '40.00', '40.00', 4, 9),
(45, '48.00', '43.00', 5, 9);

-- --------------------------------------------------------

--
-- Структура таблицы `ofp_normatives`
--

CREATE TABLE `ofp_normatives` (
  `id` int NOT NULL,
  `name` text NOT NULL,
  `male_normative` text CHARACTER SET utf8mb3 COLLATE utf8_general_ci,
  `female_normative` text CHARACTER SET utf8mb3 COLLATE utf8_general_ci,
  `unit` text NOT NULL,
  `img` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `ofp_normatives`
--

INSERT INTO `ofp_normatives` (`id`, `name`, `male_normative`, `female_normative`, `unit`, `img`) VALUES
(1, 'Бег', '3000м', '2000м', '(мин.,с)', '1.png'),
(2, 'Прыжок с разбега', NULL, NULL, '(см)', '2.png'),
(3, 'Прыжок в длину с места', NULL, NULL, '(см)', '3.png'),
(4, 'Челночный бег 3 по 10', NULL, NULL, '(сек.)', '4.png'),
(5, 'Подтягивания на перекладине', 'высокая', 'низкая', '(кол-во раз)', '5.png'),
(6, 'Метание гранаты', '700г', '500г', '(м)', '6.png'),
(7, 'Бег на 100м', NULL, NULL, '(с.)', '1.png'),
(8, 'Наклоны вперед из положения стоя', NULL, NULL, '(см.)', '7.png'),
(9, 'Пресс', NULL, NULL, '(кол-во раз)', '8.png');

-- --------------------------------------------------------

--
-- Структура таблицы `personal_access_tokens`
--

CREATE TABLE `personal_access_tokens` (
  `id` bigint UNSIGNED NOT NULL,
  `tokenable_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `tokenable_id` bigint UNSIGNED NOT NULL,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `abilities` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `last_used_at` timestamp NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `results`
--

CREATE TABLE `results` (
  `ID_Result` bigint UNSIGNED NOT NULL,
  `ID_Test` bigint UNSIGNED NOT NULL,
  `Date` timestamp NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- --------------------------------------------------------

--
-- Структура таблицы `result_exercises`
--

CREATE TABLE `result_exercises` (
  `ID_Result_Exercise` bigint UNSIGNED NOT NULL,
  `ID_Result` bigint UNSIGNED NOT NULL,
  `Name` varchar(255) NOT NULL,
  `Description` text NOT NULL,
  `ID_Exercise` bigint UNSIGNED DEFAULT NULL,
  `Value` decimal(10,2) NOT NULL,
  `Norma` double NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- --------------------------------------------------------

--
-- Структура таблицы `roles`
--

CREATE TABLE `roles` (
  `ID_Role` int NOT NULL,
  `Name` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `roles`
--

INSERT INTO `roles` (`ID_Role`, `Name`) VALUES
(1, 'Студент'),
(2, 'Преподаватель'),
(3, 'Администратор');

-- --------------------------------------------------------

--
-- Структура таблицы `statistic`
--

CREATE TABLE `statistic` (
  `ID_Statistic` int NOT NULL,
  `ID_User` int NOT NULL,
  `ID_Test` int NOT NULL,
  `date_test` date DEFAULT NULL,
  `ID_Result` bigint UNSIGNED NOT NULL,
  `actual_id_class` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- --------------------------------------------------------

--
-- Структура таблицы `tests`
--

CREATE TABLE `tests` (
  `ID_Test` bigint UNSIGNED NOT NULL,
  `Name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `Description` varchar(700) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `Explanation` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Дамп данных таблицы `tests`
--

INSERT INTO `tests` (`ID_Test`, `Name`, `Description`, `Explanation`) VALUES
(1, 'Оценка собственного уровня физической кондиции', 'В данном тесте оценивается собственный уровень физической кондиции', ''),
(2, 'Оценка собственного уровня функционального состояния.', 'В данном тесте оценивается собственный уровень функционального состояния', ''),
(3, 'Тесты оценки специальной (прикладной) физической подготовленности', 'С помощью теста определяются физически качества студента, на основе выполнения и дальнейшей оценки выполненных заданий. ', ''),
(4, 'Оценка физической работоспособности с помощью 6-моментной функциональной пробы (по Д.Н. Давиденко, 2005)', 'Теоретическим обоснованием данной пробы является закон экономизации функций по мере повышения уровня тренированности, а также прямая зависимость между интенсивностью физической нагрузки и ЧСС.', 'Теоретическим обоснованием данной пробы является закон экономизации функций по мере повышения уровня трениро-ванности, а также прямая зависимость между интенсивностью физической нагрузки и ЧСС. Характеристики физического развития, определение физического состояния и работоспособности, безусловно, несут косвенную информацию о состоянии здоровья. Однако следует помнить, что рекомендуемый тест позволяет увидеть границы приспособительных реакций, диапазон которых и характеризует состояние здоровья. Поэтому более адекватными могут быть методики балльной и процентной оценки здоровья, учитывающие в комплексе морфологические и функциональные показатели, а также результаты нагрузочных тестов.'),
(5, 'Оценка уровня физического развития по соматометрическим показателям', 'Показатели физического развития в  разрезе социально-гигиенических исследований являются важными параметрами здоровья населения и  индикаторами социального благополучия общества. ', ''),
(6, 'Определение суточного расхода энергии', 'Освоить методику определения энергозатрат для оценки их соответствия здоровому образу жизни.', 'Студент с помощью специальных таблиц рассчитывает собственную величину энергозатрат в определенный исследуемый день. Получив величину суточных энергозатрат, далее определить какой профессиональной группе она соответствует.');

-- --------------------------------------------------------

--
-- Структура таблицы `test_user`
--

CREATE TABLE `test_user` (
  `ID` int NOT NULL,
  `ID_Test` int NOT NULL,
  `ID_User` int NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- --------------------------------------------------------

--
-- Структура таблицы `user`
--

CREATE TABLE `user` (
  `ID_User` int NOT NULL,
  `FullName` varchar(50) NOT NULL,
  `ID_Role` int NOT NULL,
  `id_class` int DEFAULT NULL,
  `gender` text NOT NULL,
  `date_change_group` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `user`
--

INSERT INTO `user` (`ID_User`, `FullName`, `ID_Role`, `id_class`, `gender`, `date_change_group`) VALUES
(1, 'Преподаватель', 2, NULL, '', NULL),
(2, 'Администратор', 3, NULL, '', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `userdata`
--

CREATE TABLE `userdata` (
  `ID_User` int NOT NULL,
  `Login` varchar(50) NOT NULL,
  `Password` varchar(150) CHARACTER SET utf8mb3 COLLATE utf8_general_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Дамп данных таблицы `userdata`
--

INSERT INTO `userdata` (`ID_User`, `Login`, `Password`) VALUES
(1, 'kafedrafv', '24D166202B4B7C0717A3ECD1C16D42E6'),
(2, 'fksastu', '879F8997F5043126183A11AD823C303B');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `class`
--
ALTER TABLE `class`
  ADD PRIMARY KEY (`ID_Class`);

--
-- Индексы таблицы `exercises`
--
ALTER TABLE `exercises`
  ADD PRIMARY KEY (`ID_Exercise`),
  ADD KEY `ExercisesTets_FK` (`ID_Test`);

--
-- Индексы таблицы `faculty`
--
ALTER TABLE `faculty`
  ADD PRIMARY KEY (`id_faculty`),
  ADD UNIQUE KEY `Name_2` (`Name`),
  ADD KEY `Name` (`Name`);

--
-- Индексы таблицы `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `normatives1`
--
ALTER TABLE `normatives1`
  ADD PRIMARY KEY (`id`),
  ADD KEY `normatives_id_test_foreign` (`ID_Test`),
  ADD KEY `normatives_id_exercise_foreign` (`ID_Exercise`);

--
-- Индексы таблицы `normatives2`
--
ALTER TABLE `normatives2`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `normatives3`
--
ALTER TABLE `normatives3`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_exercise` (`id_exercise`);

--
-- Индексы таблицы `normatives5`
--
ALTER TABLE `normatives5`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `normatives6`
--
ALTER TABLE `normatives6`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `ofp`
--
ALTER TABLE `ofp`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `id_user` (`id_user`,`id_normative`);

--
-- Индексы таблицы `ofp_assessment_tests`
--
ALTER TABLE `ofp_assessment_tests`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id_ofp_test` (`id_ofp_test`);

--
-- Индексы таблицы `ofp_normatives`
--
ALTER TABLE `ofp_normatives`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `personal_access_tokens`
--
ALTER TABLE `personal_access_tokens`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `personal_access_tokens_token_unique` (`token`),
  ADD KEY `personal_access_tokens_tokenable_type_tokenable_id_index` (`tokenable_type`,`tokenable_id`);

--
-- Индексы таблицы `results`
--
ALTER TABLE `results`
  ADD PRIMARY KEY (`ID_Result`),
  ADD KEY `ID_Test` (`ID_Test`);

--
-- Индексы таблицы `result_exercises`
--
ALTER TABLE `result_exercises`
  ADD PRIMARY KEY (`ID_Result_Exercise`),
  ADD KEY `ID_Result` (`ID_Result`),
  ADD KEY `exercises_FK` (`ID_Exercise`);

--
-- Индексы таблицы `roles`
--
ALTER TABLE `roles`
  ADD PRIMARY KEY (`ID_Role`);

--
-- Индексы таблицы `statistic`
--
ALTER TABLE `statistic`
  ADD PRIMARY KEY (`ID_Statistic`),
  ADD KEY `ID_Statistic` (`ID_Statistic`),
  ADD KEY `ID_User` (`ID_User`),
  ADD KEY `ID_Test` (`ID_Test`),
  ADD KEY `ID_Test_2` (`ID_Test`),
  ADD KEY `ID_Test_3` (`ID_Test`),
  ADD KEY `ID_Result` (`ID_Result`);

--
-- Индексы таблицы `tests`
--
ALTER TABLE `tests`
  ADD PRIMARY KEY (`ID_Test`);

--
-- Индексы таблицы `test_user`
--
ALTER TABLE `test_user`
  ADD PRIMARY KEY (`ID`),
  ADD KEY `ID_Test` (`ID_Test`),
  ADD KEY `ID_User` (`ID_User`);

--
-- Индексы таблицы `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`ID_User`),
  ADD KEY `ID_Role` (`ID_Role`);

--
-- Индексы таблицы `userdata`
--
ALTER TABLE `userdata`
  ADD PRIMARY KEY (`ID_User`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `class`
--
ALTER TABLE `class`
  MODIFY `ID_Class` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=660;

--
-- AUTO_INCREMENT для таблицы `exercises`
--
ALTER TABLE `exercises`
  MODIFY `ID_Exercise` bigint UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=57;

--
-- AUTO_INCREMENT для таблицы `faculty`
--
ALTER TABLE `faculty`
  MODIFY `id_faculty` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=660;

--
-- AUTO_INCREMENT для таблицы `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;

--
-- AUTO_INCREMENT для таблицы `normatives1`
--
ALTER TABLE `normatives1`
  MODIFY `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=103;

--
-- AUTO_INCREMENT для таблицы `normatives2`
--
ALTER TABLE `normatives2`
  MODIFY `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=73;

--
-- AUTO_INCREMENT для таблицы `normatives3`
--
ALTER TABLE `normatives3`
  MODIFY `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=51;

--
-- AUTO_INCREMENT для таблицы `normatives5`
--
ALTER TABLE `normatives5`
  MODIFY `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT для таблицы `normatives6`
--
ALTER TABLE `normatives6`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT для таблицы `ofp`
--
ALTER TABLE `ofp`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=113;

--
-- AUTO_INCREMENT для таблицы `ofp_assessment_tests`
--
ALTER TABLE `ofp_assessment_tests`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=46;

--
-- AUTO_INCREMENT для таблицы `ofp_normatives`
--
ALTER TABLE `ofp_normatives`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT для таблицы `personal_access_tokens`
--
ALTER TABLE `personal_access_tokens`
  MODIFY `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `results`
--
ALTER TABLE `results`
  MODIFY `ID_Result` bigint UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `result_exercises`
--
ALTER TABLE `result_exercises`
  MODIFY `ID_Result_Exercise` bigint UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `statistic`
--
ALTER TABLE `statistic`
  MODIFY `ID_Statistic` int NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `tests`
--
ALTER TABLE `tests`
  MODIFY `ID_Test` bigint UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT для таблицы `test_user`
--
ALTER TABLE `test_user`
  MODIFY `ID` int NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `user`
--
ALTER TABLE `user`
  MODIFY `ID_User` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=384;

--
-- Ограничения внешнего ключа сохраненных таблиц
--

--
-- Ограничения внешнего ключа таблицы `exercises`
--
ALTER TABLE `exercises`
  ADD CONSTRAINT `exercises_ibfk_1` FOREIGN KEY (`ID_Test`) REFERENCES `tests` (`ID_Test`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `normatives1`
--
ALTER TABLE `normatives1`
  ADD CONSTRAINT `normatives_id_exercise_foreign` FOREIGN KEY (`ID_Exercise`) REFERENCES `exercises` (`ID_Exercise`),
  ADD CONSTRAINT `normatives_id_test_foreign` FOREIGN KEY (`ID_Test`) REFERENCES `tests` (`ID_Test`);

--
-- Ограничения внешнего ключа таблицы `normatives3`
--
ALTER TABLE `normatives3`
  ADD CONSTRAINT `normatives3_ibfk_1` FOREIGN KEY (`id_exercise`) REFERENCES `exercises` (`ID_Exercise`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `ofp_assessment_tests`
--
ALTER TABLE `ofp_assessment_tests`
  ADD CONSTRAINT `ofp_assessment_tests_ibfk_1` FOREIGN KEY (`id_ofp_test`) REFERENCES `ofp_normatives` (`id`) ON DELETE CASCADE;

--
-- Ограничения внешнего ключа таблицы `results`
--
ALTER TABLE `results`
  ADD CONSTRAINT `results_ibfk_1` FOREIGN KEY (`ID_Test`) REFERENCES `tests` (`ID_Test`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `result_exercises`
--
ALTER TABLE `result_exercises`
  ADD CONSTRAINT `result_exercises_ibfk_1` FOREIGN KEY (`ID_Result`) REFERENCES `results` (`ID_Result`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `result_exercises_ibfk_2` FOREIGN KEY (`ID_Exercise`) REFERENCES `exercises` (`ID_Exercise`) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Ограничения внешнего ключа таблицы `statistic`
--
ALTER TABLE `statistic`
  ADD CONSTRAINT `FK_statistic_ID_Result` FOREIGN KEY (`ID_Result`) REFERENCES `results` (`ID_Result`);

--
-- Ограничения внешнего ключа таблицы `userdata`
--
ALTER TABLE `userdata`
  ADD CONSTRAINT `FK_userdata_ID_User` FOREIGN KEY (`ID_User`) REFERENCES `user` (`ID_User`) ON DELETE CASCADE ON UPDATE CASCADE;

DELIMITER $$
--
-- События
--
CREATE DEFINER=`root`@`%` EVENT `event_students` ON SCHEDULE EVERY 1 YEAR STARTS '2022-09-01 12:40:57' ON COMPLETION NOT PRESERVE ENABLE DO UPDATE user SET user.id_class = 0 WHERE DATEDIFF(CURRENT_DATE, user.date_change_group) > 364$$

DELIMITER ;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
